Index: src/day05/member/MemberRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day05.member;\r\n\r\nimport day05.member.Gender;\r\nimport day05.member.Member;\r\n\r\n// 역할 : 회원 저장소 역할\r\npublic class MemberRepository {\r\n  // 실제 데이터 처리는 여기서\r\n\r\n  public static final int NOT_FOUND = -1; //psf\r\n\r\n  Member[] memberList;\r\n\r\n  MemberRepository() {\r\n    this.memberList = new Member[3]; // 선가입회원 3명 있어\r\n    // ctrl P 누르면 변수 도움 줌\r\n    memberList[0] = new Member(\"jiwon@gmail.com\", \"1234\",\r\n        \"지워니\", 1, Gender.FEMALE, 27);\r\n    memberList[1] = new Member(\"jiji@gmail.com\", \"4567\",\r\n        \"나암자\", 2, Gender.MALE, 22);\r\n    memberList[2] = new Member(\"eeee@gmail.com\", \"7777\",\r\n        \"여어자\", 3, Gender.FEMALE, 25);\r\n  }\r\n\r\n  /**\r\n   * 모든 회원 정보를 출력해주는 메서드\r\n   */\r\n  void showMembers() {\r\n    System.out.printf(\"============현재 회원정보 (총%d명) ==============\\n\"\r\n        , memberList.length);\r\n    for (Member m : memberList) {\r\n      System.out.println(m.inform());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 회원가입 기능 : push\r\n   *\r\n   * @return : 회원가입 성공 여부\r\n   * 성공시  true, 이메일 중복되어 실패시 false\r\n   * parma : 매개변수\r\n   * @param1 - newMember: 새롭게 회원가입하는 회원의 정보\r\n   */\r\n  boolean addMember(Member newMember) {\r\n\r\n    // 이메일이 중복인가?\r\n    if (isDuplicateEmail(newMember.email)) return false;\r\n\r\n    // 실제로 멤버를 추가하는 코드\r\n    Member[] temp = new Member[memberList.length + 1];\r\n    for (int i = 0; i < memberList.length; i++) {\r\n      temp[i] = memberList[i];\r\n    }\r\n    temp[temp.length - 1] = newMember;\r\n    memberList = temp;\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * /**하면 자동으로 만들어짐\r\n   * 이메일의 중복여부를 확인하는 기능\r\n   *\r\n   * @param targerEmail : 검사 대상 이메일\r\n   * @return : 중복되었을 시 true, 사용가능할 시 false\r\n   */\r\n  boolean isDuplicateEmail(String targerEmail) {\r\n    return findByEmail(targerEmail) != null;\r\n\r\n//    return (findByEmail(targerEmail) == null) ? false : true;\r\n\r\n//    for (Member m : memberList) {\r\n//      if (targerEmail.equals(m.email)) {\r\n//        return true;\r\n//      }\r\n//    }\r\n//    return false;\r\n  }\r\n\r\n  // 마지막 회원의 번호를 알려주는 기능\r\n  int getLastMemberId() {\r\n    return memberList[memberList.length - 1].memberId;\r\n  }\r\n\r\n  /**\r\n   * 이메일을 통해 특정 회원 객체를 찾아서 반환하는 기능\r\n   *\r\n   * @param email : 찾고 싶은 회원의 이메일\r\n   * @return : 찾은 회원의 객체정보, 못찾으면 null 반화\r\n   */\r\n  Member findByEmail(String email) {\r\n    for (Member m : memberList) {\r\n      if (email.equals(m.email)) {\r\n        return m;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 비밀번호를 수정 하는 기능\r\n   *\r\n   * @param email       : 수정 대상의 이메일\r\n   * @param newPassword : 변경할 새로운 비밀번호\r\n   */\r\n  boolean changePassword(String email, String newPassword) {\r\n    int index = findIndexByEmail(email);  //인덱스 찾기\r\n\r\n    // 수정진행\r\n    if (index == NOT_FOUND) return false;\r\n\r\n    memberList[index].password = newPassword;\r\n    return true;\r\n    // 모든 배열의, 특정한 정보의 . 패스워드 <- 인덱스 필요!\r\n  }\r\n\r\n  /**\r\n   * 이메일을 통해 저장된 회원의 인덱스 값을 알아내는 메서드\r\n   *\r\n   * @param email - 탐색 대상의 이메일\r\n   * @return : 찾아낸 인덱스, 못찾으면 -1 리턴\r\n   */\r\n  int findIndexByEmail(String email) {\r\n    for (int i = 0; i < memberList.length; i++) {\r\n      if (memberList[i].email.equals(email))\r\n        return i;\r\n    }\r\n    return NOT_FOUND; // NOT_FOUND = -1 / 가시성\r\n  }\r\n\r\n\r\n  void removeMember(String email){\r\n    // 인덱스 찾기\r\n    int index = findIndexByEmail(email);\r\n    // 앞으로 땡기기\r\n    for (int i = index; i < memberList.length; i++) {\r\n      memberList[i]=memberList[i+1];\r\n    }\r\n    Member[] temp = new Member[memberList.length-1];\r\n\r\n    //배열 마지막칸 없애기\r\n    for (int i = 0; i < memberList.length; i++) {\r\n      temp[i]=memberList[i];\r\n    }\r\n    memberList=temp;\r\n  }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/MemberRepository.java b/src/day05/member/MemberRepository.java
--- a/src/day05/member/MemberRepository.java	
+++ b/src/day05/member/MemberRepository.java	
@@ -58,7 +58,7 @@
   }
 
   /**
-   * /**하면 자동으로 만들어짐
+   * / * * 하면 자동으로 만들어짐
    * 이메일의 중복여부를 확인하는 기능
    *
    * @param targerEmail : 검사 대상 이메일
Index: src/day05/member/MemberView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package day05.member;\r\n\r\nimport java.util.Scanner;\r\n\r\n// 역할 : 회원관리 앱의 입출력을 담당\r\npublic class MemberView {\r\n  Scanner sc;\r\n  MemberRepository mr; // 협력, 의존관계\r\n\r\n  public MemberView() {\r\n    // this 붙여주기!\r\n    this.sc = new Scanner(System.in); // 필드보다는 생성자를 통해 초기화 하는게 좋음\r\n    this.mr = new MemberRepository();\r\n  }\r\n\r\n  /**\r\n   * 초기 메인화면을 출력\r\n   */\r\n  void mainView() {\r\n    System.out.println(\"\\n#### 회원관리 시스템 ####\");\r\n    System.out.println(\"* 1. 회원 정보 등록하기\");\r\n    System.out.println(\"* 2. 개별회원 정보 조회하기\");\r\n    System.out.println(\"* 3. 전체회원 정보 조회하기\");\r\n    System.out.println(\"* 4. 회원 정보 수정하기\");\r\n    System.out.println(\"* 5. 회원 정보 삭제하기\");\r\n    System.out.println(\"* 6. 프로그램 종료\");\r\n    System.out.println(\"* ========================\");\r\n  }\r\n\r\n  /**\r\n   * 프로그램 화면 흐름을 제어하는 기능\r\n   */\r\n  void viewProcess() {\r\n\r\n    while (true) { // c a T > while\r\n      mainView();\r\n//    input(\">> \"); // ctrl alt M\r\n      String menuNum = input(\">> \");\r\n\r\n      switch (menuNum) {\r\n        case \"1\":\r\n          signUp();\r\n          break;\r\n        case \"2\": // 이메일을 통한 회원 정보 조회\r\n          showDetailMember();\r\n          break;\r\n        case \"3\":\r\n          mr.showMembers();\r\n          stop();\r\n          break;\r\n        case \"4\":\r\n          changePasswordViewProccess();\r\n          break;\r\n        case \"5\":\r\n          removeMemberViewProcess();\r\n          break;\r\n        case \"6\":\r\n          String answer = input(\"# 정말로 종료합니까? [y/n] : \");\r\n          if (answer.toLowerCase().charAt(0) == 'y') {\r\n            System.out.println(\"# 프로그램을 종료합니다.\");\r\n            System.exit(0);\r\n          } else {\r\n            continue;\r\n          }\r\n          break;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  // 비밀번호 변경 입출력 처리\r\n  private void changePasswordViewProccess() {\r\n    String email = input(\"# 수정할 대상의 이메일 : \");\r\n    // 대상 탐색\r\n    Member foundMember = mr.findByEmail(email);\r\n\r\n  }\r\n\r\n  String input(String message) {\r\n    System.out.print(message); // ctrl alt P : 위임\r\n    return sc.nextLine();\r\n  }\r\n\r\n  // 엔터를 누르기전까지는 멈추는 기능\r\n  void stop() {\r\n    System.out.println(\"\\n======= 엔터를 눌러서 계쏙 ... =========\");\r\n    sc.nextLine();\r\n  }\r\n\r\n  // 회원 등록 입력 처리\r\n  void signUp() {\r\n    System.out.println(\"\\n 회원 등록을 시작합니다~!~!\");\r\n    String email;\r\n    while (true) {\r\n      email = input(\"# email : \");\r\n      if (!mr.isDuplicateEmail(email)) {\r\n        break;\r\n      }\r\n      System.out.println(\"# 중복된 이메일 입니다 T_T\");\r\n    }\r\n    String name = input(\"# name : \");\r\n    String password = input(\"# password : \");\r\n\r\n    Gender gender;\r\n    checkGender:\r\n    while (true) {  // checkGender라벨 붙여주기\r\n      String inputGender = input(\"# 성별 [M/F] : \");\r\n      switch (inputGender.toUpperCase().charAt(0)) {\r\n        case 'M':\r\n          gender = Gender.MALE;\r\n          break checkGender;\r\n        case 'F':\r\n          gender = Gender.FEMALE;\r\n          break checkGender;\r\n        default:\r\n          System.out.println(\"# 성별을 M/F로 정확히 입력해주세요\");\r\n      }\r\n    }\r\n    int age = Integer.parseInt(input(\"# 나이 : \"));\r\n\r\n    // 실제 저장 명령\r\n    Member newMember = new Member(email, password, name, mr.getLastMemberId() + 1, gender, age);\r\n\r\n    mr.addMember(newMember);\r\n\r\n    System.out.println(\"\\n# 회원 가입 성공!!\");\r\n    stop();\r\n  }\r\n\r\n  // 회원 개별조희를 위한 입출력처리\r\n  void showDetailMember() {\r\n    //이메일을 입력하세요!\r\n    System.out.println(\"# 조회를 시작합니다~\");\r\n    System.out.print(\"# 이메일 : \");\r\n\r\n    // 찾은 회원 정보 출력\r\n    while (true) {\r\n      String inputEmail = sc.nextLine();\r\n      Member findMember = mr.findByEmail(inputEmail);\r\n      if (findMember != null) {\r\n        System.out.println(findMember.inform());\r\n//         System.out.printf(\"# 이름 : %s\\n#비밀번호 : %s\\n# 성별 : \");\r\n        stop();\r\n        break;\r\n      }\r\n      System.out.println(\"# 조회된 회원이 없습니다.\\n\");\r\n      System.out.print(\"# 이메일을 다시 입력해주세요 : \");\r\n    }\r\n  }\r\n\r\n  // 멤버 삭제\r\n  void removeMemberViewProcess() {\r\n    while (true) {\r\n      String email = input(\"삭제하실 회원의 이메일을 입력해주세요\");\r\n      Member findMember = mr.findByEmail(email);\r\n      if (findMember != null) {\r\n        System.out.println(\"이메일이 없습니다. 다시 입력해주세요\");\r\n        continue;\r\n      }\r\n      String answer =  input(\"정말 삭제하시겠습니까? [ Y / N ] \");\r\n      switch (answer) {\r\n        case \"Y\":\r\n          mr.removeMember(email);\r\n          System.out.println(\"회원을 삭제했습니다\");\r\n          break;\r\n        case \"N\":\r\n          System.out.println(\"삭제를 취소합니다\");\r\n          break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/day05/member/MemberView.java b/src/day05/member/MemberView.java
--- a/src/day05/member/MemberView.java	
+++ b/src/day05/member/MemberView.java	
@@ -22,7 +22,7 @@
     System.out.println("* 2. 개별회원 정보 조회하기");
     System.out.println("* 3. 전체회원 정보 조회하기");
     System.out.println("* 4. 회원 정보 수정하기");
-    System.out.println("* 5. 회원 정보 삭제하기");
+    System.out.println(if "* 5. 회원 정보 삭제하기");
     System.out.println("* 6. 프로그램 종료");
     System.out.println("* ========================");
   }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6b872ce2-4d43-4fe9-85e6-f1310087279c\" name=\"Changes\" comment=\"initial commit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"e5037bf5-ecdf-4e4a-9ab3-2bc0cc4619fd\" />\r\n        <option name=\"url\" value=\"https://github.com/Hazel0c0/java_basic202303.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$USER_HOME$/.jdks/corretto-11.0.18/lib/src.zip!/java.base/java/io/InputStream.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"jar://$USER_HOME$/.jdks/corretto-11.0.18/lib/src.zip!/java.base/java/lang/String.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"jar://$USER_HOME$/.jdks/corretto-11.0.18/lib/src.zip!/java.base/java/lang/System.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"jar://$USER_HOME$/.jdks/corretto-11.0.18/lib/src.zip!/java.base/java/util/ArrayList.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NZkIEUMREHFNJZC5zRF7HRA3vE\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;프로젝트&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors.Java&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"day05.member\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"day03\" />\r\n      <recent name=\"day02\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"애플리케이션.Test\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"day05.player.Main\" />\r\n      <module name=\"java_basic\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"day05.player.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PackagePractice\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"day04.PackagePractice\" />\r\n      <module name=\"java_basic\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"day04.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"day05.member.Test\" />\r\n      <module name=\"java_basic\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"day05.member.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"day05.member.Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"day05.member.Main\" />\r\n      <module name=\"java_basic\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"day05.member.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"day04.array.main\" />\r\n      <module name=\"java_basic\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"day04.array.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"애플리케이션.Test\" />\r\n        <item itemvalue=\"애플리케이션.day05.member.Main\" />\r\n        <item itemvalue=\"애플리케이션.Main\" />\r\n        <item itemvalue=\"애플리케이션.main\" />\r\n        <item itemvalue=\"애플리케이션.PackagePractice\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <created>1679878911194</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679878911194</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Changes\">\r\n      <created>1679880968053</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679880968053</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changes\">\r\n      <created>1679880976514</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679880976514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Changes\">\r\n      <created>1679881455594</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679881455594</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"배열 push, pop 공부하기\">\r\n      <created>1679974870980</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679974870980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"배열 push, pop 공부하기\">\r\n      <created>1679979452772</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679979452772</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"메소드 베이직 파일 _ ... 공부\">\r\n      <created>1680061154402</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680061154402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"0329 수업 종료\">\r\n      <created>1680085148309</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680085148309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"enum 다시보기\">\r\n      <created>1680139505614</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680139505614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"오전 수업 끝\">\r\n      <created>1680148192966</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680148192966</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"오전 수업 끝 0331\">\r\n      <created>1680240847183</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680240847183</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"0403 회원이 없을 때 5번 메뉴 비활성화 시키기\">\r\n      <created>1680503443230</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680503443230</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Changes\" />\r\n    <MESSAGE value=\"배열 push, pop 공부하기\" />\r\n    <MESSAGE value=\"어레이 퀴즈 공부하기\" />\r\n    <MESSAGE value=\"메소드 베이직 파일 _ ... 공부\" />\r\n    <MESSAGE value=\"문제 마저 풀기\" />\r\n    <MESSAGE value=\"0329 수업 종료\" />\r\n    <MESSAGE value=\"enum 다시보기\" />\r\n    <MESSAGE value=\"오전 수업 끝\" />\r\n    <MESSAGE value=\"오전 수업 끝 ( String List 마저 만들기)\" />\r\n    <MESSAGE value=\"오전 수업 끝 0331\" />\r\n    <MESSAGE value=\"0403 회원이 없을 때 5번 메뉴 비활성화 시키기\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"0403 회원이 없을 때 5번 메뉴 비활성화 시키기\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/day02/ArrayPush2.java</url>\r\n          <line>18</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/day02/ArrayQuizFood_T.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,8 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6b872ce2-4d43-4fe9-85e6-f1310087279c" name="Changes" comment="initial commit">
+    <list default="true" id="6b872ce2-4d43-4fe9-85e6-f1310087279c" name="Changes" comment="0403 캡슐화">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/day05/member/MemberRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/day05/member/MemberRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/day05/member/MemberView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/day05/member/MemberView.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -238,7 +240,14 @@
       <option name="project" value="LOCAL" />
       <updated>1680503443230</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="0403 캡슐화">
+      <created>1680509679845</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1680509679845</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -264,7 +273,8 @@
     <MESSAGE value="오전 수업 끝 ( String List 마저 만들기)" />
     <MESSAGE value="오전 수업 끝 0331" />
     <MESSAGE value="0403 회원이 없을 때 5번 메뉴 비활성화 시키기" />
-    <option name="LAST_COMMIT_MESSAGE" value="0403 회원이 없을 때 5번 메뉴 비활성화 시키기" />
+    <MESSAGE value="0403 캡슐화" />
+    <option name="LAST_COMMIT_MESSAGE" value="0403 캡슐화" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
